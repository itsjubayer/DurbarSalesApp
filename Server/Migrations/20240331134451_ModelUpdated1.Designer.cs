// <auto-generated />
using System;
using DurbarSalesApp.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DurbarSalesApp.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240331134451_ModelUpdated1")]
    partial class ModelUpdated1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DurbarSalesApp.Shared.DistrictSalesCentre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CtgType")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("GenerateListId")
                        .HasColumnType("int");

                    b.Property<int>("RegionalOfficeId")
                        .HasColumnType("int");

                    b.Property<int>("RegionalStoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenerateListId");

                    b.HasIndex("RegionalOfficeId");

                    b.HasIndex("RegionalStoreId");

                    b.ToTable("DistrictSalesCentre");
                });

            modelBuilder.Entity("DurbarSalesApp.Shared.GenerateList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CtgType")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RegionalOfficeId")
                        .HasColumnType("int");

                    b.Property<int>("RegionalStoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionalOfficeId");

                    b.HasIndex("RegionalStoreId");

                    b.ToTable("GenerateListData");
                });

            modelBuilder.Entity("DurbarSalesApp.Shared.RegionalOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RegionalOfficeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("RegionalOffices");
                });

            modelBuilder.Entity("DurbarSalesApp.Shared.RegionalStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RegionalStoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("RegionalStores");
                });

            modelBuilder.Entity("DurbarSalesApp.Shared.UpazillaSalesCentre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CtgType")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("GenerateListId")
                        .HasColumnType("int");

                    b.Property<int>("RegionalOfficeId")
                        .HasColumnType("int");

                    b.Property<int>("RegionalStoreId")
                        .HasColumnType("int");

                    b.Property<string>("UpazillaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("GenerateListId");

                    b.HasIndex("RegionalOfficeId");

                    b.HasIndex("RegionalStoreId");

                    b.ToTable("UpazillaSalesCentre");
                });

            modelBuilder.Entity("DurbarSalesApp.Shared.DistrictSalesCentre", b =>
                {
                    b.HasOne("DurbarSalesApp.Shared.GenerateList", null)
                        .WithMany("DistrictSalesCentreList")
                        .HasForeignKey("GenerateListId");

                    b.HasOne("DurbarSalesApp.Shared.RegionalOffice", "RegionalOffice")
                        .WithMany()
                        .HasForeignKey("RegionalOfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DurbarSalesApp.Shared.RegionalStore", "RegionalStore")
                        .WithMany()
                        .HasForeignKey("RegionalStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegionalOffice");

                    b.Navigation("RegionalStore");
                });

            modelBuilder.Entity("DurbarSalesApp.Shared.GenerateList", b =>
                {
                    b.HasOne("DurbarSalesApp.Shared.RegionalOffice", "RegionalOffice")
                        .WithMany()
                        .HasForeignKey("RegionalOfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DurbarSalesApp.Shared.RegionalStore", "RegionalStore")
                        .WithMany()
                        .HasForeignKey("RegionalStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegionalOffice");

                    b.Navigation("RegionalStore");
                });

            modelBuilder.Entity("DurbarSalesApp.Shared.UpazillaSalesCentre", b =>
                {
                    b.HasOne("DurbarSalesApp.Shared.GenerateList", null)
                        .WithMany("UpazillaSalesCentreList")
                        .HasForeignKey("GenerateListId");

                    b.HasOne("DurbarSalesApp.Shared.RegionalOffice", "RegionalOffice")
                        .WithMany()
                        .HasForeignKey("RegionalOfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DurbarSalesApp.Shared.RegionalStore", "RegionalStore")
                        .WithMany()
                        .HasForeignKey("RegionalStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegionalOffice");

                    b.Navigation("RegionalStore");
                });

            modelBuilder.Entity("DurbarSalesApp.Shared.GenerateList", b =>
                {
                    b.Navigation("DistrictSalesCentreList");

                    b.Navigation("UpazillaSalesCentreList");
                });
#pragma warning restore 612, 618
        }
    }
}
